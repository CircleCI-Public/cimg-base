version: 2.1

workflows:
  monthly-release:
    # Publishes the `YYYY.MM` tag as well as the `stable` tag
    triggers:
      - schedule:
          # Monthly on the 2nd
          cron: "0 0 2 * *"
          filters:
            branches:
              only: master
    jobs:
      - test:
          context: orb-publishing
      - publish-monthly:
          requires:
            - test
          filters:
            branches:
              only: master
          context: orb-publishing
  main:
    # Always runs. When the master branch runs, publishes the `edge` Docker tag
    jobs:
      - test:
          context: orb-publishing
      - publish-edge:
          requires:
            - test
          filters:
            branches:
              only: master
          context: orb-publishing
  manual-monthly:
    # Used to respin this month's snapshot
    jobs:
      - test:
          filters:
            tags:
              only: /^monthly$/
            branches:
              ignore: /.*/
          context: orb-publishing
      - publish-monthly:
          requires:
            - test
          filters:
            tags:
              only: /^monthly$/
            branches:
              ignore: /.*/
          context: orb-publishing

jobs:
  test:
    docker:
      - image: cibuilds/docker:19.03
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build Dockerfiles"
          command: ./build-images.sh
      - run:
          name: "Publish Docker Hub Description (master branch only)"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
             
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

              # Update the Docker Hub description
              STUBB_VER=0.2.0
              STUBB_URL="https://github.com/CircleCI-Public/stubb/releases/download/v${STUBB_VER}/stubb_${STUBB_VER}-linux-amd64.tar.gz"
              curl -sSL $STUBB_URL | tar -xz -C /usr/local/bin stubb

              stubb set description cimg/base ./README.md
            fi

  publish-edge:
    docker:
      - image: cibuilds/docker:19.03
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build & Tag Images"
          command: |
            ./build-images.sh
            docker tag cimg/base:18.04 cimg/base:edge
            docker tag cimg/base:18.04 cimg/base:edge-18.04
            docker tag cimg/base:20.04 cimg/base:edge-20.04
      - deploy:
          name: "Publish Docker Images (master branch only)"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              docker push cimg/base:edge
              docker push cimg/base:edge-18.04
              docker push cimg/base:edge-20.04
            fi

  publish-monthly:
    docker:
      - image: cibuilds/docker:19.03
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build & Tag Images"
          command: |
            ./build-images.sh
            docker tag cimg/base:18.04 cimg/base:stable
            docker tag cimg/base:18.04 cimg/base:stable-18.04
            docker tag cimg/base:20.04 cimg/base:stable-20.04
            VERSION=$( date +%Y.%m )
            docker tag cimg/base:18.04 cimg/base:${VERSION}
            docker tag cimg/base:18.04 cimg/base:${VERSION}-18.04
            docker tag cimg/base:20.04 cimg/base:${VERSION}-20.04
      - deploy:
          name: "Publish Docker Images (master branch only)"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              docker push cimg/base:stable
              docker push cimg/base:stable-18.04
              docker push cimg/base:stable-20.04
              VERSION=$( date +%Y.%m )
              docker push cimg/base:${VERSION}
              docker push cimg/base:${VERSION}-18.04
              docker push cimg/base:${VERSION}-20.04
            elif [ "${CIRCLE_TAG}" == "monthly" ]; then
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              docker push cimg/base:stable
              docker push cimg/base:stable-18.04
              docker push cimg/base:stable-20.04
              VERSION=$( date +%Y.%m )
              docker push cimg/base:${VERSION}
              docker push cimg/base:${VERSION}-18.04
              docker push cimg/base:${VERSION}-20.04
            fi
